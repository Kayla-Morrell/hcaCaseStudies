% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/column.R
\name{column_is_not_all_NA}
\alias{column_is_not_all_NA}
\alias{column_is_informative}
\alias{column_is_experimentwide}
\title{Tests on Column Content}
\usage{
column_is_not_all_NA(x)

column_is_informative(x)

column_is_experimentwide(x)
}
\arguments{
\item{x}{any \emph{R} vector for which \code{is.na()} is defined.}
}
\value{
\code{column_is_not_all_NA()} returns \code{TRUE} if all elements in
\code{x} are not \code{NA}, or \code{FALSE} otherwise.
}
\description{
\code{column_is_not_all_NA()} tests whether all elements in
column \code{x} are NA (undefined).

\code{column_is_informative()} returns \code{TRUE} when the column
\code{x} contains values that differ across rows, and hence are
informative about the status of the row.

\code{column_is_experimentwide()} returns \code{TRUE} when the
column \code{x} is not all NA, and all values in the column are
unique.
}
\examples{
example_tbl <- dplyr::tibble(
    x = letters,
    y = c(NA, tail(letters, -1)),
    z = rep(NA, length(letters)),
    w = "A"
)
example_tbl |>
    dplyr::select(where(column_is_not_all_NA))     # x, y, w

example_tbl |>
    dplyr::select(where(column_is_informative))    # x, y

example_tbl |>
    dplyr::select(where(column_is_experimentwide)) # w

}
